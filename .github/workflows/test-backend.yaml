---
name: Test Backend

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - "!backend/README.md"
      - ".github/workflows/test-backend.yaml"
  pull_request:
    branches: [main]
    paths:
      - "backend/**"
      - "!backend/README.md"
      - ".github/workflows/test-backend.yaml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    name: Test Code
    runs-on: ubuntu-latest
    container: python:3.10
    defaults:
      run:
        # Step into backend
        working-directory: ./backend
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14-alpine
        # Provide the password for postgres
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: aof
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.4.2
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi

      - name: Run tests
        env:
          VERSION: test
          RELEASEID: test
          DB_URI: postgresql+asyncpg://admin:admin@postgres/aof
        run: |
          coverage run --concurrency=thread,greenlet --source=app -m pytest
          coverage xml
        # https://github.com/nedbat/coveragepy/issues/1082
        # pytest-cov doesn't seem to support the `concurrency` flag so
        # using coverage commands

      - name: Codecov
        # You may pin to the exact commit or the version.
        # uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b
        uses: codecov/codecov-action@v3
        with:
          # Flag upload to group coverage metrics (e.g. unittests, integration)
          flags: backend # optional
