name: Super Linter

# Controls when the workflow will run
on:
  push:
    branches-ignore: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Lint Code Base
    runs-on: ubuntu-latest
    defaults:
      run:
        # Step into backend
        working-directory: ./backend
    container: github/super-linter:slim-v4
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9.*"

      - name: Install dependencies
        run: |
          apk add --no-cache gcc
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi --no-root

      # - name: Lint Code Base
      #   # Slim version does not support rust linters, dotenv linters, armttk linters, pwsh linters and c# linters
      #   uses: github/super-linter/slim@v4.8.1
      #   env:
      #     PYTHONPATH: "/github/workspace/backend:/github/workflow/.venv/lib/python3.9/site-packages"
      #     # When set to false, only new or edited files will be parsed for validation.
      #     VALIDATE_ALL_CODEBASE: false
      #     DEFAULT_BRANCH: main
      #     # Mark the status of each individual linter run in the Checks section of a pull request
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     VALIDATE_PYTHON_PYLINT: false
